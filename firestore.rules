rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read/write their own user document
    // IMPORTANT: For the admin panel to read all users, you must have a rule here
    // that allows users with role 'admin' to read the entire collection.
    // For example: allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;

      // Payments subcollection: only the user can read/write their own payments
      match /payments/{paymentId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // AssignedBike subcollection: user can read, only admin can write (role-based)
      match /assignedBike/{docId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      }

      // Other subcollections (serviceRequests, issues, etc.)
      match /{subcollection}/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // NEW RULE FOR PAYROLL
    // This allows an admin to read/write all payroll documents,
    // and a user to read only their own.
    match /payroll/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Transactions subcollection: user can read, only admin can write
    match /users/{userId}/transactions/{docId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Applications collection: anyone can create, only admin can read, update, delete
    match /applications/{docId} {
      allow create: if true;
      allow read, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Subscribe collection: anyone can create, only admin can read/update/delete
    match /subscribe/{docId} {
      allow create: if true; // Anyone can subscribe
      allow read, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Only admin can read/update/delete
    }

    // Contacting collection: anyone can create, only admin can read/update/delete
    match /contacting/{docId} {
      allow create: if true; // Anyone can send a message
      allow read, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Only admin can read/update/delete
    }
  }
}